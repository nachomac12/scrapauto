version: '3.8'

services:
  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    image: backend-prd:latest
    container_name: backend-prd
    expose:
      - "8100"
    volumes:
      - .:/code
      - /code/.venv
    depends_on:
      - mongo
      - chroma
    env_file:
      - .env
    networks:
      - autos-network
    command:
      [
        "uv",
        "run",
        "uvicorn",
        "app:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8100",
        "--reload",
        "--workers",
        "2"
      ]

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-prd
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    environment:
      PASSWORD_BASIC_AUTH: ${PASSWORD_BASIC_AUTH}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certbot/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/letsencrypt:/etc/letsencrypt
    networks:
      - autos-network

  certbot:
    image: certbot/certbot
    container_name: certbot-prd
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks:
      - autos-network

  mongo:
    image: mongo
    container_name: mongo-prd
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASS}
    ports:
      - "27017:27017"
    networks:
      - autos-network

  chroma:
    image: ghcr.io/chroma-core/chroma
    container_name: chroma-prd
    expose:
      - "8000"
    environment:
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=FALSE
      - CHROMA_WORKERS=1
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - autos-network

volumes:
  mongo_data:
  chroma_data:

networks:
  autos-network:
    driver: bridge
